name: Vercel Preview URL Comment

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  vercel_preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Get Pull Request Branch
        id: get_branch
        run: echo "branch=${{ github.head_ref }}" >> $GITHUB_OUTPUT

      - name: Get Vercel Project ID
        id: get_project_id
        run: vercel project ls --json --token=${{ secrets.VERCEL_TOKEN }} | jq -r '.projects[] | select(.name == "your-vercel-project-name") | .id' >> $GITHUB_OUTPUT

      - name: List Vercel Deployments
        run: vercel ls deployments --token=${{ secrets.VERCEL_TOKEN }} --filter="projectId=${{ steps.get_project_id.outputs.result }} && gitBranch=${{ steps.get_branch.outputs.branch }}"
        continue-on-error: true

      - name: Sleep 30 seconds
        run: sleep 30

      - name: Vercel Preview URL
        uses: zentered/vercel-preview-url@v1.1.9
        id: vercel_preview_url
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          vercel_project_id: 'prj_U10w7yPhzVzgeGCR05jNMYq7Qgt3'

      - name: Create Comment with URL
        uses: actions/github-script@v6
        if: steps.vercel_preview_url.outputs.preview_url
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const url = `https://${{ steps.vercel_preview_url.outputs.preview_url }}`;
            const message = `Vercel Preview URL: ${url}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

      - name: Get URL(for debug)
        run: echo "https://${{ steps.vercel_preview_url.outputs.preview_url }}"